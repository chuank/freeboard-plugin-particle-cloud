{"name":"Freeboard-plugin-particle-local","tagline":"freeboard.io plugins for local Particle cloud","body":"# Introduction\r\nA simple plugin for the [**freeboard.io**](https://github.com/Freeboard/freeboard) dashboard that allows data from Particle devices to be exposed on a [**local Particle cloud**](https://github.com/spark/spark-server).\r\n\r\nThe original work for this plugin was authored by **@krvarma** and [**posted on the Particle.io community forum**](https://community.particle.io/t/cool-looking-dashboard-for-connected-devices/4021/27). That version provided SSEs (Server-Sent-Events) between the **Particle.io** cloud (non-local) and a locally-installed [**freeboard.io**] dashboard.\r\n\r\nAt the time of writing, the local Particle cloud can only broadcast SSEs at the following levels:\r\n* **Firehose** (e.g. http://particle.local:8080/v1/events)\r\n* **Event-specific** (e.g. http://particle.local:8080/v1/events/[eventName])\r\n* ~~Device-specific Firehose~~ (e.g. http://particle.local:8080/v1/devices/[deviceID]/events)\r\n* ~~Device-and-event-specific~~ (e.g. http://particle.local:8080/v1/devices/[deviceID]/events/[eventName])\r\n\r\nThis repository is created to host freeboard plugins that address the above differences between **Particle.io** and locally-installed clouds. \r\n\r\n\r\n***\r\n# Installation\r\nFollow the [**instructions on freeboard.io**](http://freeboard.github.io/freeboard/docs/plugin_example.html) to install the plugin.\r\n\r\nAt this time time, there is only one plugin available:\r\n* `particleLocalSSE.js`\r\n\r\n\r\n***\r\n# Usage: Setting up a datasource\r\nAdd the **Particle Local SSE** datasource as you would normally do on freeboard.io.\r\n\r\nThe fields in the dialog box are self-explanatory. Take note to provide the **full local url** for your local Particle cloud and port number. For example: **`http://particle.local:8080`**\r\n\r\nIn the **Event** text field, enter the SSE event name you want to track. This field should contain the same string as your Particle Build/Dev code:\r\n\r\n```\r\nSpark.publish(\"eventName\", String(eventValue), 5, PRIVATE);\r\n```\r\n\r\n_(Note: there's no practical difference between PRIVATE / PUBLIC events on a local cloud!)_\r\n\r\nOnce OK'ed, you should get the SSE working and updating itself automatically to your freeboard every time a new event gets called by your Particle devices.\r\n\r\n\r\n***\r\n# Usage: Linking your datasource to a widget\r\nThis really depends on how you are publishing your variables from Particle, but a suggested approach is to compile as many readings as needed into a JSON string (be sure to check the 63-byte limit for both event name and data strings), and send that as a single publish request to minimise the number of events being published.\r\n\r\n_Take note: the local Particle cloud by default limits the publish frequency to 1Hz, or a burst of 4 messages every 4 seconds._\r\n\r\n## Example:\r\nA publish request in Particle Build/Dev for a temperature/humidity sensor might look like:\r\n\r\n```\r\ntempC = DHT22.getCelsius();\r\nhumidity = DHT22.getHumidity();\r\nsprintf(pubOut, \"{\\\"c\\\":\\\"%2.2f\\\",\\\"h\\\":\\\"%2.2f\\\"}\", tempC, humidity);\r\nSpark.publish(\"dht22\", pubOut, 5, PUBLIC);\r\n```\r\n\r\nWorking from the above example, the data received in a freeboard widget will require some additional JSON parsing, which can be easily done in the freeboard .JS editor as:\r\n\r\n```\r\nvar d = JSON.parse(datasources[\"SSE\"][\"data\"]);\r\nreturn d[\"c\"];\r\n```\r\n\r\nIf you are not publishing JSON data from Particle Build/Dev and only need to publish a single string value, retrieving this is even easier:\r\n```\r\ndatasources[\"SSE\"][\"data\"]);\r\n```\r\n\r\nIn addition, you can also parse the metadata included with each SSE:\r\n\r\n```\r\ndatasources[\"SSE\"][\"coreid\"]\r\n```\r\n\r\nor\r\n\r\n```\r\nvar dateObj = new Date(datasources[\"SSE\"][\"published_at\"]);\r\nreturn dateObj.getHours();\r\n```\r\n\r\n***\r\n# Usage: Filtering event firehose using Device ID in widgets\r\nDue to the way the current Particle local cloud works, we are unable to retrieve device-specific or device-and-event-specific SSEs for direct usage. Therefore, a workaround needs to be included in the .JS editor in freeboard.\r\n\r\nAfter setting up your datasource SSE, create a widget, and follow the guidelines below, using a Text widget as an example. In the widget's settings, click on the .JS editor and wrap the following if...else condition:\r\n```\r\nvar id = datasources[\"your_datasource\"][\"coreid\"];\r\nif(id==\"[deviceID]\") {    // replace with the Device ID that you are targeting\r\n    return datasources[\"your_datasource\"][\"data\"];    // or customised code depending on the JSON you generated\r\n}\r\n```\r\nNote: sample above is just a guideline; alter the fields to match your own scenario.\r\n\r\n\r\n***\r\n# Authors and Contributors\r\nOriginal plugin: 2014 Krishnaraj Varma (@krvarma)  \r\nParticle local cloud adaptation and instructions: 2015 Chuan Khoo (@chuank)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}